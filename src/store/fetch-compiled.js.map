{"version":3,"sources":["fetch.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;QAEgB,I,GAAA,I;QAgBA,G,GAAA,G;;AAlBhB;;;;;;AAEO,SAAS,IAAT,CAAe,GAAf,EAAoB,IAApB,EAA0B;AAChC,QAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,UAAQ,GAAR,CAAY,MAAZ;AACA,kBAAM,IAAN,CAAW,GAAX,EAAgB,IAAhB,EAAsB,IAAtB,CAA2B,oBAAY;AACtC,WAAQ,GAAR,CAAY,QAAZ;AACA,OAAI,SAAS,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,YAAQ,SAAS,IAAjB;AACA,IAFD,MAEO;AACN,WAAO,SAAS,IAAT,CAAc,OAArB;AACA;AACD,GAPD,EAOG,KAPH,CAOS,aAAK;AACb,UAAO,CAAP;AACA,GATD;AAUA,EAZM,CAAP;AAaA;;AAEM,SAAS,GAAT,CAAc,GAAd,EAA6C;AAAA,KAA1B,IAA0B,uEAAnB,EAAmB;AAAA,KAAf,KAAe,uEAAP,KAAO;;AACnD,KAAI,KAAJ,EAAW;AACV,MAAM,MAAM,MAAM,KAAK,QAAL,EAAlB;AACE,MAAM,cAAc,OAAO,cAAP,CAAsB,OAAtB,CAA8B,GAA9B,CAApB;AACF,SAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,OAAI,WAAJ,EAAiB;AAChB,YAAQ,KAAK,KAAL,CAAW,WAAX,CAAR;AACA,IAFD,MAEO;AACN,kBAAc,GAAd,EAAmB,IAAnB,EAAyB,IAAzB,CAA8B,gBAAQ;AACrC,YAAO,cAAP,CAAsB,OAAtB,CAA8B,GAA9B,EAAmC,yBAAe,IAAf,CAAnC;AACA,aAAQ,IAAR;AACA,KAHD,EAGG,KAHH,CAGS,aAAK;AACb,YAAO,CAAP;AACA,KALD;AAMA;AACD,GAXM,CAAP;AAYA,EAfD,MAeO;AACN,SAAO,cAAc,GAAd,EAAmB,IAAnB,CAAP;AACA;AACD;;AAED,SAAS,aAAT,CAAwB,GAAxB,EAA6B,MAA7B,EAAqC;AACpC,QAAO,sBAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC7C,MAAI,mCAA2B,MAA3B,EAAmC,MAAnC,GAA4C,CAAhD,EAAmD;AAClD,UAAO,GAAP;AACA,QAAK,IAAM,CAAX,IAAgB,MAAhB,EAAwB;AACvB,YAAQ,GAAR,CAAY,WAAW,CAAX,GAAe,GAAf,GAAqB,OAAO,CAAP,CAAjC;AACA,WAAO,IAAI,GAAJ,GAAU,OAAO,CAAP,CAAV,GAAsB,GAA7B;AACA;AACD,SAAM,IAAI,SAAJ,CAAc,CAAd,EAAiB,IAAI,MAAJ,GAAa,CAA9B,CAAN;AACA;AACD,UAAQ,GAAR,CAAY,GAAZ;AACA,kBAAM,GAAN,CAAU,GAAV,EAAe,IAAf,CAAoB,oBAAY;AAC/B,WAAQ,GAAR,CAAY,QAAZ;AACA,OAAI,SAAS,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,YAAQ,SAAS,IAAjB;AACA,IAFD,MAEO;AACN,WAAO,SAAS,IAAT,CAAc,OAArB;AACA;AACD,GAPD,EAOG,KAPH,CAOS,aAAK;AACb,UAAO,CAAP;AACA,GATD;AAUA,EApBM,CAAP;AAqBA","file":"fetch-compiled.js","sourcesContent":["import axios from 'axios'\n\nexport function post (url, form) {\n\treturn new Promise((resolve, reject) => {\n\t\tconsole.log('post')\n\t\taxios.post(url, form).then(response => {\n\t\t\tconsole.log(response)\n\t\t\tif (response.status === 200) {\n\t\t\t\tresolve(response.data)\n\t\t\t} else {\n\t\t\t\treject(response.data.message)\n\t\t\t}\n\t\t}).catch(e => {\n\t\t\treject(e)\n\t\t})\n\t})\n}\n\nexport function get (url, form = {}, cache = false) {\n\tif (cache) {\n\t\tconst key = url + form.toString()\n    const sessionData = window.sessionStorage.getItem(key)\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (sessionData) {\n\t\t\t\tresolve(JSON.parse(sessionData))\n\t\t\t} else {\n\t\t\t\tgetFromServer(url, form).then(data => {\n\t\t\t\t\twindow.sessionStorage.setItem(key, JSON.stringify(data))\n\t\t\t\t\tresolve(data)\n\t\t\t\t}).catch(e => {\n\t\t\t\t\treject(e)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t} else {\n\t\treturn getFromServer(url, form)\n\t}\n}\n\nfunction getFromServer (url, params) {\n\treturn new Promise(function (resolve, reject) {\n\t\tif (Object.getOwnPropertyNames(params).length > 0) {\n\t\t\turl += '?'\n\t\t\tfor (const f in params) {\n\t\t\t\tconsole.log('param ' + f + ':' + params[f])\n\t\t\t\turl += f + '=' + params[f] + '&'\n\t\t\t}\n\t\t\turl = url.substring(0, url.length - 1)\n\t\t}\n\t\tconsole.log(url)\n\t\taxios.get(url).then(response => {\n\t\t\tconsole.log(response)\n\t\t\tif (response.status === 200) {\n\t\t\t\tresolve(response.data)\n\t\t\t} else {\n\t\t\t\treject(response.data.message)\n\t\t\t}\n\t\t}).catch(e => {\n\t\t\treject(e)\n\t\t})\n\t})\n}\n"]}